[mu [(program)]
[def (sim-print) [lam [(r input!) (c0 clobber!)] {
    li c0 0xbaaabaaa
    csrw 0x51e c0
    csrw 0x51e r
}]]
[def (sim-print-int) [lam [(k num!) (c0 clobber!) (c1 clobber!)] {
    li c0 0xbaaabaaa
    li c1 [id k]
    csrw 0x51e c0
    csrw 0x51e c1
}]]
[def (die) {
    li t0 0xdeaddead
    csrw 0x51e t0}]
[def (get-hartid [-> block!]) [lam [(r output!)] {
    csrr r 0x50b
}]]
[def (get-coreid [-> block!]) [lam [(r output!)] {
    csrr r 0x510
}]]
[def (n-harts num!) 8]
[def (n-cores num!) 36]
[def (critical-hart [-> block!]) [critical n-harts get-hartid]]
[def (critical-cores [-> block!]) [critical n-cores get-coreid]]
[def (single-hart [-> block!]) [single get-hartid]]
[def (single-core [-> block!]) [single get-coreid]]
[def (single [-> block!])
  [lam [(clobber0 clobber!) (do-single block!)]
  [single-hart clobber0 [single-core clobber0 do-single]]]]
[program]]
